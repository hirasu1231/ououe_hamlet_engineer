{"remainingRequest":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vue-loader/lib/index.js??vue-loader-options!/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vuepress-plugin-reading-progress/ReadingProgress.vue?vue&type=style&index=0&id=3515b409&lang=stylus&scoped=true","dependencies":[{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vuepress-plugin-reading-progress/ReadingProgress.vue","mtime":1717848463068},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/css-loader/dist/cjs.js","mtime":1717848467831},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1717848478502},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/postcss-loader/src/index.js","mtime":1717848467829},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/stylus-loader/index.js","mtime":1717848448766},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/cache-loader/dist/cjs.js","mtime":1717848465138},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vue-loader/lib/index.js","mtime":1717848471002}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRyZWFkaW5nQmdDb2xvciA/PSB0cmFuc3BhcmVudAokcmVhZGluZ1pJbmRleCA/PSAxMDAwCiRyZWFkaW5nU2l6ZSA/PSAzcHgKJHJlYWRpbmdQcm9ncmVzc0NvbG9yID89ICRhY2NlbnRDb2xvcgokcmVhZGluZ1Byb2dyZXNzSW1hZ2UgPz0gbm9uZQoKLnJlYWRpbmctcHJvZ3Jlc3MKICBwb3NpdGlvbiBmaXhlZAogIHotaW5kZXggJHJlYWRpbmdaSW5kZXgKICBiYWNrZ3JvdW5kICRyZWFkaW5nQmdDb2xvcgogIG92ZXJmbG93IGhpZGRlbgogIC5wcm9ncmVzcwogICAgd2lkdGggMTAwJQogICAgaGVpZ2h0IDEwMCUKICAgIGJhY2tncm91bmQgJHJlYWRpbmdQcm9ncmVzc0NvbG9yCiAgICBiYWNrZ3JvdW5kLWltYWdlICRyZWFkaW5nUHJvZ3Jlc3NJbWFnZQogICAgdHJhbnNmb3JtLW9yaWdpbiAwJSAwJQogICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycyBlYXNlLW91dAoudG9wCiAgdG9wIDAKICBsZWZ0IDAKICByaWdodCAwCiAgd2lkdGggMTAwJQogIGhlaWdodCAkcmVhZGluZ1NpemUKLmJvdHRvbQogIGJvdHRvbSAwCiAgbGVmdCAwCiAgcmlnaHQgMAogIHdpZHRoIDEwMCUKICBoZWlnaHQgJHJlYWRpbmdTaXplCi5sZWZ0CiAgbGVmdCAwCiAgdG9wIDAKICBib3R0b20gMAogIHdpZHRoICRyZWFkaW5nU2l6ZQogIGhlaWdodCAxMDAlCi5yaWdodAogIHJpZ2h0IDAKICB0b3AgMAogIGJvdHRvbSAwCiAgd2lkdGggJHJlYWRpbmdTaXplCiAgaGVpZ2h0IDEwMCUK"},{"version":3,"sources":["ReadingProgress.vue"],"names":[],"mappings":";AA0FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReadingProgress.vue","sourceRoot":"node_modules/vuepress-plugin-reading-progress","sourcesContent":["<template>\n  <ClientOnly>\n    <div v-if=\"$readingShow\" :class=\"$readingShow\" class=\"reading-progress\">\n      <div :style=\"progressStyle\" class=\"progress\"></div>\n    </div>\n  </ClientOnly>\n</template>\n\n<script>\nexport default {\n  name: 'ReadingProgress',\n  data () {\n    return {\n      readingTop: 0,\n      readingHeight: 1,\n      progressStyle: null,\n      transform: undefined,\n      running: false\n    }\n  },\n  watch: {\n    $readingShow () {\n      this.progressStyle = this.getProgressStyle()\n      this.$readingShow && window.addEventListener('scroll', this.base)\n    }\n  },\n  mounted () {\n    this.transform = this.getTransform()\n    this.progressStyle = this.getProgressStyle()\n    this.$readingShow && window.addEventListener('scroll', this.base)\n  },\n  beforeDestroy () {\n    this.$readingShow && window.removeEventListener('scroll', this.base)\n  },\n  methods: {\n    base() {\n      if (!this.running) {\n        this.running = true\n        requestAnimationFrame(this.getReadingBase)\n      }\n    },\n    getReadingBase () {\n      this.readingHeight = this.getReadingHeight() - this.getScreenHeight()\n      this.readingTop = this.getReadingTop()\n      this.progressStyle = this.getProgressStyle()\n      this.running = false\n    },\n    getReadingHeight () {\n      return Math.max(document.body.scrollHeight, document.body.offsetHeight, 0)\n    },\n    getScreenHeight () {\n      return Math.max(window.innerHeight, document.documentElement.clientHeight, 0)\n    },\n    getReadingTop () {\n      return Math.max(window.pageYOffset, document.documentElement.scrollTop, 0)\n    },\n    getTransform () {\n      const div = document.createElement('div')\n      const transformList = ['transform', '-webkit-transform', '-moz-transform', '-o-transform', '-ms-transform']\n      return transformList.find(item => item in div.style) || undefined\n    },\n    getProgressStyle () {\n      const progress = this.readingTop / this.readingHeight\n      switch (this.$readingShow) {\n        case 'top':\n        case 'bottom':\n          if (this.transform) {\n            return `${this.transform}: scaleX(${progress})`\n          } else {\n            return `width: ${progress * 100}%`\n          }\n          break\n        case 'left':\n        case 'right':\n          if (this.transform) {\n            return `${this.transform}: scaleY(${progress})`\n          } else {\n            return `height: ${progress * 100}%`\n          }\n          break\n        default:\n          return null\n          break\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n$readingBgColor ?= transparent\n$readingZIndex ?= 1000\n$readingSize ?= 3px\n$readingProgressColor ?= $accentColor\n$readingProgressImage ?= none\n\n.reading-progress\n  position fixed\n  z-index $readingZIndex\n  background $readingBgColor\n  overflow hidden\n  .progress\n    width 100%\n    height 100%\n    background $readingProgressColor\n    background-image $readingProgressImage\n    transform-origin 0% 0%\n    transition: transform .2s ease-out\n.top\n  top 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.bottom\n  bottom 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.left\n  left 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n.right\n  right 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n</style>\n"]}]}
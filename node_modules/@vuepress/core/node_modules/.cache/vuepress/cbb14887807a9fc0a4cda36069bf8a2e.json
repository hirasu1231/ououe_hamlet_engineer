{"remainingRequest":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vue-loader/lib/index.js??vue-loader-options!/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vuepress-plugin-reading-progress/ReadingProgress.vue?vue&type=script&lang=js","dependencies":[{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vuepress-plugin-reading-progress/ReadingProgress.vue","mtime":1717848463068},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/cache-loader/dist/cjs.js","mtime":1717848465138},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/babel-loader/lib/index.js","mtime":1717848467837},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/cache-loader/dist/cjs.js","mtime":1717848465138},{"path":"/myapp/ououe_hamlet_engineer/hirasu_git/node_modules/vue-loader/lib/index.js","mtime":1717848471002}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVhZGluZ1Byb2dyZXNzJywKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlYWRpbmdUb3A6IDAsCiAgICAgIHJlYWRpbmdIZWlnaHQ6IDEsCiAgICAgIHByb2dyZXNzU3R5bGU6IG51bGwsCiAgICAgIHRyYW5zZm9ybTogdW5kZWZpbmVkLAogICAgICBydW5uaW5nOiBmYWxzZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICRyZWFkaW5nU2hvdyAoKSB7CiAgICAgIHRoaXMucHJvZ3Jlc3NTdHlsZSA9IHRoaXMuZ2V0UHJvZ3Jlc3NTdHlsZSgpCiAgICAgIHRoaXMuJHJlYWRpbmdTaG93ICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmJhc2UpCiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMudHJhbnNmb3JtID0gdGhpcy5nZXRUcmFuc2Zvcm0oKQogICAgdGhpcy5wcm9ncmVzc1N0eWxlID0gdGhpcy5nZXRQcm9ncmVzc1N0eWxlKCkKICAgIHRoaXMuJHJlYWRpbmdTaG93ICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmJhc2UpCiAgfSwKICBiZWZvcmVEZXN0cm95ICgpIHsKICAgIHRoaXMuJHJlYWRpbmdTaG93ICYmIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmJhc2UpCiAgfSwKICBtZXRob2RzOiB7CiAgICBiYXNlKCkgewogICAgICBpZiAoIXRoaXMucnVubmluZykgewogICAgICAgIHRoaXMucnVubmluZyA9IHRydWUKICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5nZXRSZWFkaW5nQmFzZSkKICAgICAgfQogICAgfSwKICAgIGdldFJlYWRpbmdCYXNlICgpIHsKICAgICAgdGhpcy5yZWFkaW5nSGVpZ2h0ID0gdGhpcy5nZXRSZWFkaW5nSGVpZ2h0KCkgLSB0aGlzLmdldFNjcmVlbkhlaWdodCgpCiAgICAgIHRoaXMucmVhZGluZ1RvcCA9IHRoaXMuZ2V0UmVhZGluZ1RvcCgpCiAgICAgIHRoaXMucHJvZ3Jlc3NTdHlsZSA9IHRoaXMuZ2V0UHJvZ3Jlc3NTdHlsZSgpCiAgICAgIHRoaXMucnVubmluZyA9IGZhbHNlCiAgICB9LAogICAgZ2V0UmVhZGluZ0hlaWdodCAoKSB7CiAgICAgIHJldHVybiBNYXRoLm1heChkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCwgZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQsIDApCiAgICB9LAogICAgZ2V0U2NyZWVuSGVpZ2h0ICgpIHsKICAgICAgcmV0dXJuIE1hdGgubWF4KHdpbmRvdy5pbm5lckhlaWdodCwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCwgMCkKICAgIH0sCiAgICBnZXRSZWFkaW5nVG9wICgpIHsKICAgICAgcmV0dXJuIE1hdGgubWF4KHdpbmRvdy5wYWdlWU9mZnNldCwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCwgMCkKICAgIH0sCiAgICBnZXRUcmFuc2Zvcm0gKCkgewogICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKQogICAgICBjb25zdCB0cmFuc2Zvcm1MaXN0ID0gWyd0cmFuc2Zvcm0nLCAnLXdlYmtpdC10cmFuc2Zvcm0nLCAnLW1vei10cmFuc2Zvcm0nLCAnLW8tdHJhbnNmb3JtJywgJy1tcy10cmFuc2Zvcm0nXQogICAgICByZXR1cm4gdHJhbnNmb3JtTGlzdC5maW5kKGl0ZW0gPT4gaXRlbSBpbiBkaXYuc3R5bGUpIHx8IHVuZGVmaW5lZAogICAgfSwKICAgIGdldFByb2dyZXNzU3R5bGUgKCkgewogICAgICBjb25zdCBwcm9ncmVzcyA9IHRoaXMucmVhZGluZ1RvcCAvIHRoaXMucmVhZGluZ0hlaWdodAogICAgICBzd2l0Y2ggKHRoaXMuJHJlYWRpbmdTaG93KSB7CiAgICAgICAgY2FzZSAndG9wJzoKICAgICAgICBjYXNlICdib3R0b20nOgogICAgICAgICAgaWYgKHRoaXMudHJhbnNmb3JtKSB7CiAgICAgICAgICAgIHJldHVybiBgJHt0aGlzLnRyYW5zZm9ybX06IHNjYWxlWCgke3Byb2dyZXNzfSlgCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gYHdpZHRoOiAke3Byb2dyZXNzICogMTAwfSVgCiAgICAgICAgICB9CiAgICAgICAgICBicmVhawogICAgICAgIGNhc2UgJ2xlZnQnOgogICAgICAgIGNhc2UgJ3JpZ2h0JzoKICAgICAgICAgIGlmICh0aGlzLnRyYW5zZm9ybSkgewogICAgICAgICAgICByZXR1cm4gYCR7dGhpcy50cmFuc2Zvcm19OiBzY2FsZVkoJHtwcm9ncmVzc30pYAogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGBoZWlnaHQ6ICR7cHJvZ3Jlc3MgKiAxMDB9JWAKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgICBicmVhawogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ReadingProgress.vue"],"names":[],"mappings":";AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReadingProgress.vue","sourceRoot":"node_modules/vuepress-plugin-reading-progress","sourcesContent":["<template>\n  <ClientOnly>\n    <div v-if=\"$readingShow\" :class=\"$readingShow\" class=\"reading-progress\">\n      <div :style=\"progressStyle\" class=\"progress\"></div>\n    </div>\n  </ClientOnly>\n</template>\n\n<script>\nexport default {\n  name: 'ReadingProgress',\n  data () {\n    return {\n      readingTop: 0,\n      readingHeight: 1,\n      progressStyle: null,\n      transform: undefined,\n      running: false\n    }\n  },\n  watch: {\n    $readingShow () {\n      this.progressStyle = this.getProgressStyle()\n      this.$readingShow && window.addEventListener('scroll', this.base)\n    }\n  },\n  mounted () {\n    this.transform = this.getTransform()\n    this.progressStyle = this.getProgressStyle()\n    this.$readingShow && window.addEventListener('scroll', this.base)\n  },\n  beforeDestroy () {\n    this.$readingShow && window.removeEventListener('scroll', this.base)\n  },\n  methods: {\n    base() {\n      if (!this.running) {\n        this.running = true\n        requestAnimationFrame(this.getReadingBase)\n      }\n    },\n    getReadingBase () {\n      this.readingHeight = this.getReadingHeight() - this.getScreenHeight()\n      this.readingTop = this.getReadingTop()\n      this.progressStyle = this.getProgressStyle()\n      this.running = false\n    },\n    getReadingHeight () {\n      return Math.max(document.body.scrollHeight, document.body.offsetHeight, 0)\n    },\n    getScreenHeight () {\n      return Math.max(window.innerHeight, document.documentElement.clientHeight, 0)\n    },\n    getReadingTop () {\n      return Math.max(window.pageYOffset, document.documentElement.scrollTop, 0)\n    },\n    getTransform () {\n      const div = document.createElement('div')\n      const transformList = ['transform', '-webkit-transform', '-moz-transform', '-o-transform', '-ms-transform']\n      return transformList.find(item => item in div.style) || undefined\n    },\n    getProgressStyle () {\n      const progress = this.readingTop / this.readingHeight\n      switch (this.$readingShow) {\n        case 'top':\n        case 'bottom':\n          if (this.transform) {\n            return `${this.transform}: scaleX(${progress})`\n          } else {\n            return `width: ${progress * 100}%`\n          }\n          break\n        case 'left':\n        case 'right':\n          if (this.transform) {\n            return `${this.transform}: scaleY(${progress})`\n          } else {\n            return `height: ${progress * 100}%`\n          }\n          break\n        default:\n          return null\n          break\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n$readingBgColor ?= transparent\n$readingZIndex ?= 1000\n$readingSize ?= 3px\n$readingProgressColor ?= $accentColor\n$readingProgressImage ?= none\n\n.reading-progress\n  position fixed\n  z-index $readingZIndex\n  background $readingBgColor\n  overflow hidden\n  .progress\n    width 100%\n    height 100%\n    background $readingProgressColor\n    background-image $readingProgressImage\n    transform-origin 0% 0%\n    transition: transform .2s ease-out\n.top\n  top 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.bottom\n  bottom 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.left\n  left 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n.right\n  right 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n</style>\n"]}]}
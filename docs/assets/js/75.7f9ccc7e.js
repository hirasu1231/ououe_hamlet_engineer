(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{508:function(e,t,a){"use strict";a.r(t);var n=a(2),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("ゼロからのOS自作入門」2章 メモリ情報を出力しながらでHello worldを実行します．(後編)")]),e._v(" "),a("ClientOnly",[a("CallInArticleAdsense")],1),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#main-cの改良"}},[e._v("Main.cの改良")])]),a("li",[a("a",{attrs:{href:"#メインマップの確認"}},[e._v("メインマップの確認")])]),a("li",[a("a",{attrs:{href:"#ビルド"}},[e._v("ビルド")])]),a("li",[a("a",{attrs:{href:"#hello-world"}},[e._v("Hello world")])]),a("li",[a("a",{attrs:{href:"#まとめ"}},[e._v("まとめ")])]),a("li",[a("a",{attrs:{href:"#参考サイト"}},[e._v("参考サイト")])])])]),a("p"),e._v(" "),a("p",[a("a",{attrs:{href:"https://px.a8.net/svt/ejp?a8mat=3HBXCY+4DRW36+50+2HM5Z5",rel:"nofollow"}},[a("img",{attrs:{border:"0",width:"1000",height:"124",alt:"",src:"https://www27.a8.net/svt/bgt?aid=210508450265&wid=001&eno=01&mid=s00000000018015052000&mc=1"}})]),a("img",{attrs:{border:"0",width:"1",height:"1",src:"https://www10.a8.net/0.gif?a8mat=3HBXCY+4DRW36+50+2HM5Z5",alt:""}})]),e._v(" "),a("p",[a("a",{attrs:{href:"https://px.a8.net/svt/ejp?a8mat=3HIN6N+3YAMCY+CO4+6BMG1",rel:"nofollow"}},[a("img",{attrs:{border:"0",width:"1000",height:"124",alt:"",src:"https://www23.a8.net/svt/bgt?aid=210821855239&wid=001&eno=01&mid=s00000001642001062000&mc=1"}})]),a("img",{attrs:{border:"0",width:"1",height:"1",src:"https://www17.a8.net/0.gif?a8mat=3HIN6N+3YAMCY+CO4+6BMG1",alt:""}})]),e._v(" "),a("p",[a("a",{attrs:{href:"https://px.a8.net/svt/ejp?a8mat=3HIN6N+7FBNEA+4AQ0+5YJRM",rel:"nofollow"}},[e._v("全国630店舗以上！もみほぐし・足つぼ・ハンドリフレ・クイックヘッドのリラクゼーション店【りらくる】")]),a("img",{attrs:{border:"0",width:"1",height:"1",src:"https://www15.a8.net/0.gif?a8mat=3HIN6N+7FBNEA+4AQ0+5YJRM",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"main-cの改良"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-cの改良"}},[e._v("#")]),e._v(" Main.cの改良")]),e._v(" "),a("p",[e._v("/workspaces/mikanos-devcontainer/mikanos/MikanLoaderPkg/Main.c,Loader.infを下記の内容のファイルを改良します．")]),e._v(" "),a("p",[e._v("(MikanLoaderPkg.dec・MikanLoaderPkg.dsc・Loader.inf・Main.c)")]),e._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Defines"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  INF_VERSION                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0x00010006")]),e._v("\n  BASE_NAME                      "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Loader\n  FILE_GUID                      "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" c9d0d202"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("71e9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("11e8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9e52")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("cfbfd0063fbf\n  MODULE_TYPE                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" UEFI_APPLICATION\n  VERSION_STRING                 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.1")]),e._v("\n  ENTRY_POINT                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" UefiMain\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[e._v("VALID_ARCHITECTURES           "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" X64")])]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Sources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("c\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  MdePkg"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("MdePkg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("dec\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("LibraryClasses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  UefiLib\n  UefiApplicationEntryPoint\n\n  BaseLib\n  BaseMemoryLib\n  DebugLib\n  DevicePathLib\n  MemoryAllocationLib\n  PcdLib\n  PrintLib\n  DebugLib\n  UefiBootServicesTableLib\n  UefiRuntimeServicesTableLib\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Guids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Protocols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ここを追加")]),e._v("\n  gEfiLoadedImageProtocolGuid\n  gEfiLoadFileProtocolGuid\n  gEfiSimpleFileSystemProtocolGuid\n")])])]),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Main.c\n#include  <Uefi.h>\n#include  <Library/UefiLib.h>\n#include  <Library/UefiBootServicesTableLib.h>\n#include  <Library/PrintLib.h>\n#include  <Protocol/LoadedImage.h>\n#include  <Protocol/SimpleFileSystem.h>\n#include  <Protocol/DiskIo2.h>\n#include  <Protocol/BlockIo.h>\n\nstruct MemoryMap{\n  UINTN buffer_size;\n  VOID* buffer;\n  UINTN map_size;\n  UINTN map_key;\n  UINTN descriptor_size;\n  UINT32 descriptor_version;\n};\n\nEFI_STATUS GetMemoryMap(struct MemoryMap* map) {\n  if (map->buffer == NULL) {\n    return EFI_BUFFER_TOO_SMALL;\n  }\n\n  map->map_size = map->buffer_size;\n  return gBS->GetMemoryMap(\n      &map->map_size,\n      (EFI_MEMORY_DESCRIPTOR*)map->buffer,\n      &map->map_key,\n      &map->descriptor_size,\n      &map->descriptor_version);\n}\n\n\n// #@@range_begin(get_memory_type)\nconst CHAR16* GetMemoryTypeUnicode(EFI_MEMORY_TYPE type) {\n  switch (type) {\n    case EfiReservedMemoryType: return L"EfiReservedMemoryType";\n    case EfiLoaderCode: return L"EfiLoaderCode";\n    case EfiLoaderData: return L"EfiLoaderData";\n    case EfiBootServicesCode: return L"EfiBootServicesCode";\n    case EfiBootServicesData: return L"EfiBootServicesData";\n    case EfiRuntimeServicesCode: return L"EfiRuntimeServicesCode";\n    case EfiRuntimeServicesData: return L"EfiRuntimeServicesData";\n    case EfiConventionalMemory: return L"EfiConventionalMemory";\n    case EfiUnusableMemory: return L"EfiUnusableMemory";\n    case EfiACPIReclaimMemory: return L"EfiACPIReclaimMemory";\n    case EfiACPIMemoryNVS: return L"EfiACPIMemoryNVS";\n    case EfiMemoryMappedIO: return L"EfiMemoryMappedIO";\n    case EfiMemoryMappedIOPortSpace: return L"EfiMemoryMappedIOPortSpace";\n    case EfiPalCode: return L"EfiPalCode";\n    case EfiPersistentMemory: return L"EfiPersistentMemory";\n    case EfiMaxMemoryType: return L"EfiMaxMemoryType";\n    default: return L"InvalidMemoryType";\n  }\n}\n\nEFI_STATUS SaveMemoryMap(struct MemoryMap* map, EFI_FILE_PROTOCOL* file){\n  CHAR8 buf[256];\n  UINTN len;\n  \n  CHAR8* header = "Index Type, Type(name), PhysicalStart, NumberOfPages, Attribute\\n";\n  len = AsciiStrLen(header);\n  file->Write(file, &len, header);\n\n  Print(L"map->buffer = %08lx, map->map_size = %08lx\\n", \n      map->buffer, map->map_size);\n\n  EFI_PHYSICAL_ADDRESS iter;\n  int i;\n  for (iter = (EFI_PHYSICAL_ADDRESS)map->buffer, i = 0;\n  iter < (EFI_PHYSICAL_ADDRESS)map->buffer + map->map_size;\n  iter += map->descriptor_size, i++){\n    EFI_MEMORY_DESCRIPTOR* desc = (EFI_MEMORY_DESCRIPTOR*)iter;\n    len = AsciiSPrint(\n      buf, sizeof(buf),\n      "%u, %x, %-ls, %08lx, %lx, %lx\\n",\n      i, desc->Type, GetMemoryTypeUnicode(desc->Type),\n      desc->PhysicalStart, desc->NumberOfPages,\n      desc->Attribute & 0xffffflu);\n    file->Write(file, &len, buf);\n  }\n  return EFI_SUCCESS;\n}\n\nEFI_STATUS OpenRootDir(EFI_HANDLE image_handle, EFI_FILE_PROTOCOL** root){\n  EFI_LOADED_IMAGE_PROTOCOL* loaded_image;\n  EFI_SIMPLE_FILE_SYSTEM_PROTOCOL* fs;\n\n  gBS->OpenProtocol(\n    image_handle,\n    &gEfiLoadedImageProtocolGuid,\n    (VOID**)&loaded_image,\n    image_handle,\n    NULL,\n    EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL);\n\n  gBS->OpenProtocol(\n    loaded_image->DeviceHandle,\n    &gEfiSimpleFileSystemProtocolGuid,\n    (VOID**)&fs,\n    image_handle,\n    NULL,\n    EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL);\n\n  fs->OpenVolume(fs, root);\n\n  return EFI_SUCCESS;\n}\n\nEFI_STATUS EFIAPI UefiMain(\n    // ウィンドウ等を操作したいときに対象を識別するために割り当てられる一意の番号\n    EFI_HANDLE image_handle,\n    // データを入れる表\n    EFI_SYSTEM_TABLE* system_table) {\n\n  Print(L"Hello, Mikan World!\\n");\n\n  CHAR8 memmap_buf[4096 * 4];\n  struct MemoryMap memmap = {sizeof(memmap_buf), memmap_buf, 0, 0, 0, 0};\n  GetMemoryMap(&memmap);\n\n  Print(L"GetMemoryMap done\\n");\n\n  EFI_FILE_PROTOCOL* root_dir;\n  OpenRootDir(image_handle, &root_dir);\n\n  Print(L"OpenRootDir done\\n");\n\n  EFI_FILE_PROTOCOL* memmap_file;\n  root_dir->Open(\n    root_dir, &memmap_file, L"\\\\memmap",\n    EFI_FILE_MODE_READ | EFI_FILE_MODE_WRITE | EFI_FILE_MODE_CREATE, 0);\n\n  Print(L"EFI_FILE_PROTOCOL done\\n");\n\n  SaveMemoryMap(&memmap, memmap_file);\n  memmap_file->Close(memmap_file);\n\n  Print(L"All done\\n");\n\n  while (1);\n  return EFI_SUCCESS;\n}\n')])])]),a("h2",{attrs:{id:"メインマップの確認"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#メインマップの確認"}},[e._v("#")]),e._v(" メインマップの確認")]),e._v(" "),a("p",[e._v("下記のコードでメインマップを確認しつつ，Hello Worldを実行します．")]),e._v(" "),a("h2",{attrs:{id:"ビルド"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ビルド"}},[e._v("#")]),e._v(" ビルド")]),e._v(" "),a("p",[e._v("下記のコードで変更したMain.c等を反映します．")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# cd ~/workspaces/mikanos-devcontainer/mikanos/kernel")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/edk2/\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" edksetup.sh\nbuild\n")])])]),a("h2",{attrs:{id:"hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[e._v("#")]),e._v(" Hello world")]),e._v(" "),a("p",[e._v("下記のコードでイメージファイルを上書きし，Hello Worldを実行します．")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /home/vscode/edk2/Build/MikanLoaderX64/DEBUG_CLANG38/X64\n\nqemu-system-x86_64 -drive "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("pflash,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("raw,file"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/osbook/devenv/OVMF_CODE.fd -drive "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("pflash,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("raw,file"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/osbook/devenv/OVMF_VARS.fd -drive "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("disk.img,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("raw,index"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(",media"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("disk\n")])])]),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"/image/mikanos/hello_2seq.png",loading:"lazy"}})]),e._v(" "),a("p",[e._v("そして，イメージファイルをマウントします．すると，「ls mnt」でmemmapが作成されていることを確認します．")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p mnt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mount")]),e._v(" -o loop disk.img mnt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p mnt/EFI/BOOT\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" Loarder.efi mnt/EFI/BOOT/BOOTX64.EFI\n")])])]),a("p",[e._v("memmapの確認後は，マウントを解除します．")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("umount")]),e._v(" mnt\n")])])]),a("h2",{attrs:{id:"まとめ"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#まとめ"}},[e._v("#")]),e._v(" まとめ")]),e._v(" "),a("p",[e._v("以上で，2章の内容を一通り実装しました．")]),e._v(" "),a("h2",{attrs:{id:"参考サイト"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考サイト"}},[e._v("#")]),e._v(" 参考サイト")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://zero.osdev.jp/",target:"_blank",rel:"noopener noreferrer"}},[e._v("「ゼロからのOS自作入門」のサポートサイト"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://osdev-jp.readthedocs.io/ja/latest/2017/create-uefi-app-with-edk2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EDK II で UEFI アプリケーションを作る"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://e-words.jp/w/%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AB.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ハンドル（handle）とは - IT用語辞典"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://px.a8.net/svt/ejp?a8mat=3HBXCY+4DRW36+50+2HM5Z5",rel:"nofollow"}},[a("img",{attrs:{border:"0",width:"1000",height:"124",alt:"",src:"https://www27.a8.net/svt/bgt?aid=210508450265&wid=001&eno=01&mid=s00000000018015052000&mc=1"}})]),a("img",{attrs:{border:"0",width:"1",height:"1",src:"https://www10.a8.net/0.gif?a8mat=3HBXCY+4DRW36+50+2HM5Z5",alt:""}})]),e._v(" "),a("p",[a("a",{attrs:{href:"https://px.a8.net/svt/ejp?a8mat=3HIN6N+3YAMCY+CO4+6BMG1",rel:"nofollow"}},[a("img",{attrs:{border:"0",width:"1000",height:"124",alt:"",src:"https://www23.a8.net/svt/bgt?aid=210821855239&wid=001&eno=01&mid=s00000001642001062000&mc=1"}})]),a("img",{attrs:{border:"0",width:"1",height:"1",src:"https://www17.a8.net/0.gif?a8mat=3HIN6N+3YAMCY+CO4+6BMG1",alt:""}})]),e._v(" "),a("p",[a("a",{attrs:{href:"https://px.a8.net/svt/ejp?a8mat=3HIN6N+7FBNEA+4AQ0+5YJRM",rel:"nofollow"}},[e._v("全国630店舗以上！もみほぐし・足つぼ・ハンドリフレ・クイックヘッドのリラクゼーション店【りらくる】")]),a("img",{attrs:{border:"0",width:"1",height:"1",src:"https://www15.a8.net/0.gif?a8mat=3HIN6N+7FBNEA+4AQ0+5YJRM",alt:""}})]),e._v(" "),a("ClientOnly",[a("CallInArticleAdsense")],1)],1)}),[],!1,null,null,null);t.default=s.exports}}]);